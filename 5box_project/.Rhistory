source('~/Desktop/EPS 236/5box_project/constants_5box.R', echo=TRUE)
teo.span(K, c0, 0, 1000)
source('~/Desktop/EPS 236/5box_project/constants_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/5box_project/models_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/5box_project/models_5box.R', echo=TRUE)
View(int.results)
source('~/Desktop/EPS 236/5box_project/constants_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/5box_project/constants_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/5box_project/constants_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/5box_project/models_5box.R', echo=TRUE)
dim
dim(int.results
)
source('~/.active-rstudio-document', echo=TRUE)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[13]))
### find system state at t
ct.t <- Xe %*% lambda.t %*% init.rotate
View(ct.t)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
t <- 31
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
### find system state at t
ct.t <- Xe %*% lambda.t %*% init.rotate
View(ct.t)
source('~/.active-rstudio-document', echo=TRUE)
t1 <- 10000
t0 <- 0
teo.results <- matrix(0, t1-t0, 5)
t1 <- 10001
t0 <- 0
teo.results <- matrix(0, t1-t0, 5)
for(i in t0:t1){
teo.results[i,] <- zapsmall(t(teo.point(K, c0,i) ) )
} #end for
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
init.rotate <- Xe1 %*% c0
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
return(ct.t)
}# end teo.point
source('~/.active-rstudio-document', echo=TRUE)
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
print(Xe)
print(lambda.0)
print(Xe1)
init.rotate <- Xe1 %*% c0
print(init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print(ct.t)
return(ct.t)
}# end teo.point
source('~/.active-rstudio-document', echo=TRUE)
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
print("Xe:" Xe)
print("lambda" lambda.0)
print("Xe1" Xe1)
init.rotate <- Xe1 %*% c0
print(init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t" lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct" ct.t)
return(ct.t)
}# end teo.point
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
print("Xe", Xe)
print("lambda", lambda.0)
print("Xe1", Xe1)
init.rotate <- Xe1 %*% c0
print("rotate", init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t", lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct", ct.t)
return(ct.t)
}# end teo.point
source('~/.active-rstudio-document', echo=TRUE)
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
print("Xe") print(Xe)
print("lambda") print(lambda.0)
print("Xe1" print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate", init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t") print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct") print(ct.t)
return(ct.t)
}# end teo.point
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
print("Xe") print(Xe)
print("lambda") print(lambda.0)
print("Xe1") print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate", init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t") print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct") print(ct.t)
return(ct.t)
}# end teo.point
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
print("Xe")
print(Xe)
print("lambda")
print(lambda.0)
print("Xe1")
print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
print(ct.t)
return(ct.t)
}# end teo.point
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
# print("Xe")
print(Xe)
# print("lambda")
print(lambda.0)
# print("Xe1")
print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
print(ct.t)
return(ct.t)
}# end teo.point
source('~/.active-rstudio-document', echo=TRUE)
eo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
# print("Xe")
# print(Xe)
# print("lambda")
# print(lambda.0)
# print("Xe1")
# print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
print(ct.t)
return(ct.t)
}# end teo.point
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
# print("Xe")
# print(Xe)
# print("lambda")
# print(lambda.0)
# print("Xe1")
# print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
print(ct.t)
return(ct.t)
}# end teo.point
source('~/.active-rstudio-document', echo=TRUE)
teo.results
source('~/.active-rstudio-document', echo=TRUE)
View(teo.results)
source('~/.active-rstudio-document', echo=TRUE)
View(teo.results)
source('~/Desktop/EPS 236/EPS236/5box_project/constants_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/EPS236/5box_project/models_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/EPS236/5box_project/models_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/EPS236/5box_project/constants_5box.R', echo=TRUE)
source('~/Desktop/EPS 236/EPS236/5box_project/models_5box.R', echo=TRUE)
teo.point(K, c0, 13)
source('~/Desktop/EPS 236/EPS236/5box_project/constants_5box.R', echo=TRUE)
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
# print("Xe")
# print(Xe)
# print("lambda")
# print(lambda.0)
# print("Xe1")
# print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
print(ct.t)
return(ct.t)
}# end teo.point
t1 <- 10
t1 <- 10
t0 <- 0
teo.results <- matrix(0, t1-t0, 5)
for(i in t0:t1){
teo.results[i,] <- t(teo.point(K, c0, 41) )
} #end for
View(teo.results)
teo.point(K, c0, 13)
for(i in t0:t1){
teo.results[i,] <- t(teo.point(K, c0, i) )
} #end for
for(i in t0:t1-1){
teo.results[i,] <- t(teo.point(K, c0, i) )
} #end for
teo.point(K, c0, i)
teo.point(K, c0, j)
for(j in tt){
teo.results[i,] <- t(teo.point(K, c0, j) )
} #end for
teo.point(K, c0, 13)
for (j in tt){print(tt)}
length(tt)
teo.point(K, c0, 13)
t1 <- 10
t0 <- 0
teo.results <- matrix(0, t1-t0, 5)
teo.results[1,] <- c0
View(teo.results)
length(teo.results)
rows(teo.results)
row(teo.results)
length(row(teo.results) )
nrow(teo.results)
for(j in 1: nrow(teo.results)){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
return(ct.t)
teo.results[i,] <- result.t
} #end for
for(j in 1: nrow(teo.results)){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[j]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
return(ct.t)
teo.results[i,] <- result.t
} #end for
t1 <- 13
t0 <- 0
teo.results <- matrix(0, t1-t0, 5)
teo.results[1,] <- c0
for(j in 1: nrow(teo.results)){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[j]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
return(ct.t)
teo.results[i,] <- result.t
} #end for
View(ct.t)
teo.point <- function(K, c0,t){
V0=eigen(K)
Xe=V0$vectors
lambda.0 <- V0$values
Xe1=solve(Xe)
# print("Xe")
# print(Xe)
# print("lambda")
# print(lambda.0)
# print("Xe1")
# print(Xe1)
init.rotate <- Xe1 %*% c0
print("rotate")
print( init.rotate)
### find lambda.t
lambda.t <- diag(exp(lambda.0*tt[t]))
print("lambda t")
print(lambda.t)
### find system state at t
ct.t <- Xe %*% (lambda.t %*% init.rotate)
print("ct")
print(ct.t)
return(ct.t)
}# end teo.point
teo.point(K, c0, 13)
teo.span <- function(K, c0, t0, t1){
teo.results <- c0
for(i in t0:t1){
ct.t <- t(teo.point(K, c0, i) )
teo.results <- c(teo.results, ct.t)
} #end for
return(teo.results)
}# end teo.span
teo.span <- function(K, c0, t0, t1){
teo.results <- c0
for(i in t0:t1){
ct.t <- t(teo.point(K, c0, i) )
teo.results <- c(teo.results, ct.t)
} #end for
teo.results <- data.frame(box.one = teo.results[,1] ,
box.two = teo.results[,2] ,
box.three = teo.results[,3] ,
box.four = teo.results[,4] ,
box.five = teo.results[,5] )
return(teo.results)
}# end teo.span
teo.span(K, c0, 0, 1000)
teo.point(K, c0, 13)
ct.t <- t(teo.point(K, c0, 13) )
View(teo.results)
teo.span(K, c0, 0, 15)
teo.point(K, c0, 13)
t(teo.point(K, c0, 13) )
ct.t <- t(teo.point(K, c0, 13) )
teo.results <- c(teo.results, ct.t)
teo.results
