\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<<fig = F, echo = F>>=

# A basic box model solved with the linear programming approach.  The time evolution operator
# Set up a 5-box problem similar to transport of tracers in the the earth's atmosphere
# Troposphere: High latitudes, Tropics/Subtropics, in each hemisphere; 
# Advection into and out of the stratosphere (uni-directional
# Slowest exchange into the stratopshere, next slowest across the equator

## The advection and exchange parameters
k21 = k34 = 2 
k23 = k32 = .2 
k25 = k35 = k54 = k51 = .02  
# yr-1

k12 = k21 + k51
k43 = k34 + k54

k50=0 ## loss process, only in the "stratosphere"
# All others = 0; 
# but in another case, allow for a loss process k5o = -0.01  (k5o = removal/loss)
k50.1= -.01

#The Transport matrix K

K = matrix(0, ncol = 5, nrow = 5)  ## initialize with zeros
K1=K

#      1         2          3          4          5
#
#1   -k12       k21                              k51
#2    k12  -(k21+k23+k25)  k32               
#3             k23     -(k32+k34+k35) k43
#4                         k34        -k43       k54
#5             k25         k35             -(k51+k54+ k50|k50.1 )
# vvvvvvvvvvvv
K[1,1]=-k12 
K[2,2]=-(k21+k23+k25) 
K[3,3]=-(k32+k34+k35) 
K[4,4]=-k43 
K[1,2]= k21 
K[1,5]= k51
K[2,1]= k12
K[2,3]= k32
K[3,2]= k23
K[3,4]= k43
K[4,3]= k34
K[4,5]= k54
K[5,5] = -(k51+k54) 
K[5,2]=k25
K[5,3]=k35

K1=K
K1[5,5]=-(k51+k54+k50.1)
#^^^^^^^^^^^^^


##    Integration of the transport equation ------------------------------------------------------------

delt=.01

##   tt is the time vector for the problem
tt=seq(0,100,delt) ## note "feature", seq produces a single precision result //all other R fcns double (!)
tt2 <-seq(0,20,delt)
tt3 <-seq(0,6,delt)
  
  
c0 <- c(1,0,0,0,0) ## an initial condition -> age spectrum of box 1
c1 <- c(0,1,0,0,0)
c2 <- c(0,0,1,0,0)
c3 <- c(0,0,0,1,0)
c4 <- c(0,0,0,0,1)


## solve the problem by integrating the 1st order differential equation (warning -- result may be biased...)
int.results=matrix(0, nrow=10001, ncol=5)

int.results[1,]=c0









@

<<fig = F, echo = F>>=

########## integration model

### integration model
### TODO make this apply and not a for loop
### TODO make this a function?

int.results=matrix(0, nrow=10001, ncol=5)

int.results[1,]=c0

for(j in 1:10000){
  
  int.results[j+1,] <- int.results[j,] + K %*% int.results[j,] * delt
  
}

# 
# ### plot integration model
# matplot(tt, int.results, lty=1,col=c("black","red","blue","cyan","grey"),ylim=c(-.1,2),type="l")
# legend(80,2.0, legend = c("Box 1",
#                           "Box 2",
#                           "Box 3",
#                           "Box 4",
#                           "Box 5"), col = c("black","red","blue","cyan","grey"), lty = 1)
# 


########### TEO Model

teo.point <- function(K, c0, t){
  
  V0=eigen(K)
  
  
  Xe=V0$vectors
  lambda.0 <- V0$values
  Xe1=solve(Xe)
  
  # print("Xe") 
  # print(Xe) 
  # print("lambda") 
  # print(lambda.0) 
  # print("Xe1") 
  # print(Xe1) 
  
  init.rotate <- Xe1 %*% c0
  
  # print("rotate")
  # print( init.rotate) 
  
  ### find lambda.t 
  lambda.t <- diag(exp(lambda.0*tt[t])) 
  
  # print("lambda t") 
  # print(lambda.t) 
  
  
  ### find system state at t
  ct.t <- Xe %*% (lambda.t %*% init.rotate)
  
  # print("ct") 
  # print(ct.t) 
  
  return(ct.t) 
  
}# end teo.point



### many point TEO model
teo.span <- function(K, c0, t0, t1){
  
  teo.results <- matrix(0, t1 + 1 , 5)
  print(dim(teo.results) )
  
  for(i in t0:t1){
    
    teo.results[i,] <- zapsmall(t(teo.point(K, c0,i ) ) )
    
  } #end for
  
  return(teo.results) 
  
}# end teo.span

teo.results0 <- teo.span(K, c0, 1, 10000)


### difference betw/ int model and teo model
sys.error.teo.int <- teo.results0 - int.results

# ### plot sys error model
# matplot(tt, sys.error, lty=1,col=c("black","red","blue","cyan","grey") ,
#         ylim=c(-.001,.001) ,
#         xlim = c(0,30) , 
#         type="l")
# legend(80,2.0, legend = c("Box 1",
#                           "Box 2",
#                           "Box 3",
#                           "Box 4",
#                           "Box 5"), col = c("black","red","blue","cyan","grey"), lty = 1)

### greens functions
# 
teo.results1 <- teo.span(K, c1, 1, 10000)
teo.results2 <- teo.span(K, c2, 1, 10000)
teo.results3 <- teo.span(K, c3, 1, 10000)
teo.results4 <- teo.span(K, c4, 1, 10000)




  ### Superpoistion of greens functions 

new.pulse <- c(0,0,0,2,0) 

super.results.a <- teo.span(K, c1, 1,2000) 

super.results.b <- teo.span(K, new.pulse, 150,2000)

super.results <- super.results.a + super.results.b

### plot sys error model
# matplot(1:2000, super.results, lty=1,col=c("black","red","blue","cyan","grey") ,
#         ylim=c(-.1,2) ,
#         xlim = c(0,2000) , 
#         type="l")
# legend(80,2.0, legend = c("Box 1",
#                           "Box 2",
#                           "Box 3",
#                           "Box 4",
#                           "Box 5"), 
#        col = c("black","red","blue","cyan","grey"), lty = 1)



### reverse time

teo.point.rev <- function(K, c0, t){
  
  V0=eigen(K)
  
  
  Xe=V0$vectors
  lambda.0 <- V0$values
  Xe1=solve(Xe)
  
  # print("Xe") 
  # print(Xe) 
  # print("lambda") 
  # print(lambda.0) 
  # print("Xe1") 
  # print(Xe1) 
  
  init.rotate <- Xe1 %*% c0
  
  # print("rotate")
  # print( init.rotate) 
  
  ### find lambda.t 
  lambda.t <- diag(exp(lambda.0* (-1*tt[t]) ) ) 
  
  
  ### find system state at t
  ct.t <- Xe %*% (lambda.t %*% init.rotate)
  
  # print("ct") 
  # print(ct.t) 
  
  return(ct.t) 
  
}# end teo.point


teo.span.rev <- function(K, c0, t0, t1){
  
  teo.results <- matrix(0, t1 + 1 , 5)

  for(i in t0:t1){
    
    teo.results[i,] <- zapsmall(t(teo.point.rev(K, c0,i ) ) )
    
  } #end for
  
  return(teo.results) 
  
}# end teo.span

ct <- c(0.13788447, 0.14797195, 0.33182964, 0.33993688, 0.04237706) 


inverse.results <- teo.span.rev(K, ct, 1, 600) 



### introduce error
sd <- .01

ct.error <- c(0.13788447 + rnorm(1, mean = 0, sd = sd), 
              0.14797195 + rnorm(1, mean = 0, sd = sd), 
              0.33182964 + rnorm(1, mean = 0, sd = sd), 
              0.33993688 + rnorm(1, mean = 0, sd = sd),
              0.04237706 + rnorm(1, mean = 0, sd = sd)) 


inverse.results.error <- teo.span.rev(K, ct.error, 1, 600) 

sys.error.rev <- inverse.results - inverse.results.error





@

<<fig = F, echo = F>>>=
library(ggplot2)
library(tidyr)
library(dplyr) 


####### plot int.results ##########
int.results.plotable <- data.frame(tt, int.results) 
colnames(int.results.plotable) <- c("time" , 
                       "box.1" , 
                       "box.2" , 
                       "box.3" , 
                       "box.4" , 
                       "box.5" ) 
                       
  
  
int.results.plotable <- gather(int.results.plotable , 
                               key  = "box",
                               value = ct ,
                              "box.1" ,
                              "box.2" ,
                              "box.3" ,
                              "box.4" ,
                              "box.5" 
                              ) #end gather
                              

int.results.plot <- ggplot(data = int.results.plotable,
       aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(int.results.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(int.results.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(int.results.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(int.results.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(int.results.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Integration Model") 
  
#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(int.results.plot)



####### plot teo.results0 ##########
teo.results0.plotable <- data.frame(tt, teo.results0) 
colnames(teo.results0.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



teo.results0.plotable <- gather(teo.results0.plotable , 
                               key  = "box",
                               value = ct ,
                               "box.1" ,
                               "box.2" ,
                               "box.3" ,
                               "box.4" ,
                               "box.5" 
) #end gather


teo.results0.plot <- ggplot(data = teo.results0.plotable,
                           aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(teo.results0.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(teo.results0.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(teo.results0.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(teo.results0.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(teo.results0.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  

  ggtitle("Time Evolution Operator Model") 



print(teo.results0.plot)














####### plot sys.error.teo.int.results ##########
sys.error.teo.int.plotable <- data.frame(tt, sys.error.teo.int) 

colnames(sys.error.teo.int.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



sys.error.teo.int.plotable <- gather(sys.error.teo.int.plotable , 
                               key  = "box",
                               value = ct ,
                               "box.1" ,
                               "box.2" ,
                               "box.3" ,
                               "box.4" ,
                               "box.5" 
) #end gather


sys.error.teo.int.plot <- ggplot(data = sys.error.teo.int.plotable,
                           aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(sys.error.teo.int.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(sys.error.teo.int.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(sys.error.teo.int.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(sys.error.teo.int.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(sys.error.teo.int.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  xlim(0, 2) +
  ylim(-.005, .005) +
  
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "delta ct") + 
  
  
  ggtitle("Sytematic Error TEO, Integration") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(sys.error.teo.int.plot)



















####### plot teo.results1 ##########
teo.results1.plotable <- data.frame(tt, teo.results1) 
colnames(teo.results1.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



teo.results1.plotable <- gather(teo.results1.plotable , 
                                key  = "box",
                                value = ct ,
                                "box.1" ,
                                "box.2" ,
                                "box.3" ,
                                "box.4" ,
                                "box.5" 
) #end gather


teo.results1.plot <- ggplot(data = teo.results1.plotable,
                            aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(teo.results1.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(teo.results1.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(teo.results1.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(teo.results1.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(teo.results1.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Unit Impulse in Box 2 Time Evolution Operator Model") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(teo.results1.plot)














####### plot teo.results2 ##########
teo.results2.plotable <- data.frame(tt, teo.results2) 
colnames(teo.results2.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



teo.results2.plotable <- gather(teo.results2.plotable , 
                                key  = "box",
                                value = ct ,
                                "box.1" ,
                                "box.2" ,
                                "box.3" ,
                                "box.4" ,
                                "box.5" 
) #end gather


teo.results2.plot <- ggplot(data = teo.results2.plotable,
                            aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(teo.results2.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(teo.results2.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(teo.results2.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(teo.results2.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(teo.results2.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Unit Impulse in Box 2 Time Evolution Operator Model") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(teo.results2.plot)














####### plot teo.results3 ##########
teo.results3.plotable <- data.frame(tt, teo.results3) 
colnames(teo.results3.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



teo.results3.plotable <- gather(teo.results3.plotable , 
                                key  = "box",
                                value = ct ,
                                "box.1" ,
                                "box.2" ,
                                "box.3" ,
                                "box.4" ,
                                "box.5" 
) #end gather


teo.results3.plot <- ggplot(data = teo.results3.plotable,
                            aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(teo.results3.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(teo.results3.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(teo.results3.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(teo.results3.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(teo.results3.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Unit Impulse in Box 4 Time Evolution Operator Model") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(teo.results3.plot)














####### plot teo.results4 ##########
teo.results4.plotable <- data.frame(tt, teo.results4) 
colnames(teo.results4.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



teo.results4.plotable <- gather(teo.results4.plotable , 
                                key  = "box",
                                value = ct ,
                                "box.1" ,
                                "box.2" ,
                                "box.3" ,
                                "box.4" ,
                                "box.5" 
) #end gather


teo.results4.plot <- ggplot(data = teo.results4.plotable,
                            aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(teo.results4.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(teo.results4.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(teo.results4.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(teo.results4.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(teo.results4.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Unit Impulse in Box 5 Time Evolution Operator Model") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(teo.results4.plot)
















####### plot super.results ##########
super.results.plotable <- data.frame(tt2, super.results) 
colnames(super.results.plotable) <- c("time" , 
                                    "box.1" , 
                                    "box.2" , 
                                    "box.3" , 
                                    "box.4" , 
                                    "box.5" ) 



super.results.plotable <- gather(super.results.plotable , 
                                key  = "box",
                                value = ct ,
                                "box.1" ,
                                "box.2" ,
                                "box.3" ,
                                "box.4" ,
                                "box.5" 
) #end gather


super.results.plot <- ggplot(data = super.results.plotable,
                            aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(super.results.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(super.results.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(super.results.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(super.results.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(super.results.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Superposition Time Evolution Operator Model") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(super.results.plot)














####### plot inverse.results ##########
inverse.results.plotable <- data.frame(tt3, inverse.results) 
colnames(inverse.results.plotable) <- c("time" , 
                                      "box.1" , 
                                      "box.2" , 
                                      "box.3" , 
                                      "box.4" , 
                                      "box.5" ) 



inverse.results.plotable <- gather(inverse.results.plotable , 
                                 key  = "box",
                                 value = ct ,
                                 "box.1" ,
                                 "box.2" ,
                                 "box.3" ,
                                 "box.4" ,
                                 "box.5" 
) #end gather


inverse.results.plot <- ggplot(data = inverse.results.plotable,
                             aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(inverse.results.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(inverse.results.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(inverse.results.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(inverse.results.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(inverse.results.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  xlim(0, 5) +
  ylim(0, 1) +
  
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "ct") + 
  
  
  ggtitle("Superposition Time Evolution Operator Model") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(inverse.results.plot)















####### sys.error.rev.results ##########
sys.error.rev.plotable <- data.frame(tt3, sys.error.rev) 
colnames(sys.error.rev.plotable) <- c("time" , 
                                        "box.1" , 
                                        "box.2" , 
                                        "box.3" , 
                                        "box.4" , 
                                        "box.5" ) 



sys.error.rev.plotable <- gather(sys.error.rev.plotable , 
                                   key  = "box",
                                   value = ct ,
                                   "box.1" ,
                                   "box.2" ,
                                   "box.3" ,
                                   "box.4" ,
                                   "box.5" 
) #end gather


sys.error.rev.plot <- ggplot(data = sys.error.rev.plotable,
                               aes(x= time, color = factor(box))
) + #end ggplot
  
  geom_point(data = filter(sys.error.rev.plotable, box == "box.1"), aes(y = ct), color = "blue", size = .5 ) + 
  geom_point(data = filter(sys.error.rev.plotable, box == "box.2"), aes(y = ct), color = "red", size = .5 ) + 
  geom_point(data = filter(sys.error.rev.plotable, box == "box.3"), aes(y = ct), color = "black", size = .5 ) + 
  geom_point(data = filter(sys.error.rev.plotable, box == "box.4"), aes(y = ct), color = "green", size = .5 ) + 
  geom_point(data = filter(sys.error.rev.plotable, box == "box.5"), aes(y = ct), color = "grey", size = .5 ) + 
  
  xlim(0, 5) +
  ylim(-1, 1) +
  
  
  theme_classic() + 
  
  scale_color_viridis_c() + 
  # theme_ethan()+
  # geom_text_repel(aes(label = type))+
  labs(x= "time" ,
       y= "delta ct") + 
  
  
  ggtitle("Introduced Error") 

#geom_text_repel(aes(label = mean.perc.bb, size = 11) )  # turned off bc I cant control how many
# sigfigs the labels display

print(sys.error.rev.plot)














@





\section{Question Zero: Integration Model}
<<fig = T, echo = F>>= 
print(int.results.plot)
@
\section{Question One}

<<>>=

teo.point <- function(K, c0, t){
  
  V0=eigen(K)
  
  
  Xe=V0$vectors
  lambda.0 <- V0$values
  Xe1=solve(Xe)
  
  # print("Xe") 
  # print(Xe) 
  # print("lambda") 
  # print(lambda.0) 
  # print("Xe1") 
  # print(Xe1) 
  
  init.rotate <- Xe1 %*% c0
  
  # print("rotate")
  # print( init.rotate) 
  
  ### find lambda.t 
  lambda.t <- diag(exp(lambda.0*tt[t])) 
  
  # print("lambda t") 
  # print(lambda.t) 
  
  
  ### find system state at t
  ct.t <- Xe %*% (lambda.t %*% init.rotate)
  
  # print("ct") 
  # print(ct.t) 
  
  return(ct.t) 
  
}# end teo.point


teo.point(K, c0, 13)
@

\section{Question Two}

<<echo = T>>>=

### many point TEO model
teo.span <- function(K, c0, t0, t1){
  
  teo.results <- matrix(0, t1 + 1 , 5)
  print(dim(teo.results) )
  
  for(i in t0:t1){
    
    teo.results[i,] <- zapsmall(t(teo.point(K, c0,i ) ) )
    
  } #end for
  
  return(teo.results) 
  
}# end teo.span

teo.results0 <- teo.span(K, c0, 1, 10000)

@

<<fig = T, echo = F>>=
print(teo.results0.plot)
@
<<fig = T, echo = F>>=
print(sys.error.teo.int.results.plot)
@

\section{Question Three}

<<echo = T>>=
teo.results1 <- teo.span(K, c1, 1, 10000)
teo.results2 <- teo.span(K, c2, 1, 10000)
teo.results3 <- teo.span(K, c3, 1, 10000)
teo.results4 <- teo.span(K, c4, 1, 10000)

@


<<fig = T, echo = F>>=
print(teo.results1.plot)
@
<<fig = T, echo = F>>=
print(teo.results2.plot)
@
<<fig = T, echo = F>>=
print(teo.results3.plot)
@
<<fig = T, echo = F>>=
print(teo.results4.plot)
@

\subsection{3a: Superposition}

<<echo = T>>=
new.pulse <- c(0,0,0,2,0) 

super.results.a <- teo.span(K, c1, 1,2000) 

super.results.b <- teo.span(K, new.pulse, 150,2000)

super.results <- super.results.a + super.results.b
@


<<fig = T, echo = F>>=
print(super.results.plot)
@

<<echo= T>>=
teo.point.rev <- function(K, c0, t){
  
  V0=eigen(K)
  
  
  Xe=V0$vectors
  lambda.0 <- V0$values
  Xe1=solve(Xe)
  
  # print("Xe") 
  # print(Xe) 
  # print("lambda") 
  # print(lambda.0) 
  # print("Xe1") 
  # print(Xe1) 
  
  init.rotate <- Xe1 %*% c0
  
  # print("rotate")
  # print( init.rotate) 
  
  ### find lambda.t 
  lambda.t <- diag(exp(lambda.0* (-1*tt[t]) ) ) 
  
  
  ### find system state at t
  ct.t <- Xe %*% (lambda.t %*% init.rotate)
  
  # print("ct") 
  # print(ct.t) 
  
  return(ct.t) 
  
}# end teo.point


teo.span.rev <- function(K, c0, t0, t1){
  
  teo.results <- matrix(0, t1 + 1 , 5)

  for(i in t0:t1){
    
    teo.results[i,] <- zapsmall(t(teo.point.rev(K, c0,i ) ) )
    
  } #end for
  
  return(teo.results) 
  
}# end teo.span

ct <- c(0.13788447, 0.14797195, 0.33182964, 0.33993688, 0.04237706) 


inverse.results <- teo.span.rev(K, ct, 1, 600) 


@


<<fig = T, echo = F>>=
print(inverse.results.plot)
@

<<echo = T>>=
### introduce error
sd <- .01

ct.error <- c(0.13788447 + rnorm(1, mean = 0, sd = sd), 
              0.14797195 + rnorm(1, mean = 0, sd = sd), 
              0.33182964 + rnorm(1, mean = 0, sd = sd), 
              0.33993688 + rnorm(1, mean = 0, sd = sd),
              0.04237706 + rnorm(1, mean = 0, sd = sd)) 


inverse.results.error <- teo.span.rev(K, ct.error, 1, 600) 

sys.error.rev <- inverse.results - inverse.results.error


@
<<fig = T, echo = F>>=
print(sys.error.rev.results.plot)
@


\end{document}